{"version":3,"sources":["pages/Settings.js","pages/Login.js","redux/actions/headerActions.js","redux/actions/gameActions.js","components/Questions.js","components/Timer.js","components/Header.js","components/NextButton.js","pages/Game.js","pages/Feedback.js","pages/Ranking.js","App.js","redux/reducers/gameReducer.js","redux/reducers/player.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Settings","data-testid","React","Component","Login","validateInput","state","name","email","testMail","test","validate","length","setState","buttonDisabled","handleChange","target","value","submitClick","event","a","history","props","preventDefault","fetch","then","response","json","fetchToken","localStorage","setItem","token","changeEmail","push","redirectConfig","clearScoreDispatch","this","className","src","alt","htmlFor","type","id","onChange","onClick","disabled","connect","dispatch","actionSetEmail","Questions","indexQuestion","difficultyPoints","easy","medium","hard","questions","responseCode","showBorder","changeShowBorder","undefined","currentQuestion","category","question","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","difficulty","correctAnswerElement","incorrectAnswersElement","map","answer","index","key","categoryElement","textElement","answerRandomElement","sort","Math","random","store","gameReducer","Timer","timer","Header","getGravatar","score","gravatarEndPoint","player","hash","md5","payload","NextButton","changeIndex","to","Game","receiveAPI","requestQuestionsDispatch","getItem","counterTimer","setInterval","prevState","receiveNewScore","floor","changeShowBorderPerTime","questionsComponent","URL","fetchURL","jsonURL","results","response_code","requestQuestions","FeedBack","getScoreInfo","rankingInfo","JSON","parse","stringify","clearScore","assertions","Ranking","redirectHome","homeButton","rankingInfoOrdered","b","rankingList","App","exact","path","component","render","Feedback","INITIAL_STATE","action","gravatarEmail","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e781ec1.chunk.js","sourcesContent":["import React from 'react';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"settings-title\">\n        Settings\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Settings from './Settings';\nimport { actionSetEmail } from '../redux/actions/headerActions';\nimport { clearScore } from '../redux/actions/gameActions';\nimport '../CSS/login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      buttonDisabled: true,\n      redirectConfig: false,\n    };\n  }\n\n  componentDidMount() {\n    const { clearScoreDispatch } = this.props;\n    clearScoreDispatch();\n  }\n\n  validateInput = () => {\n    const { name, email } = this.state;\n    const testMail = /\\S+@\\S+\\.\\S+/.test(email);\n    const validate = (\n      name.length > 0\n      && testMail\n    );\n    this.setState({\n      buttonDisabled: !validate,\n    });\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.validateInput());\n  }\n\n  submitClick = async (event) => {\n    const { history } = this.props;\n    event.preventDefault();\n    // fazer requisição e salver o token no localStorage\n    const fetchToken = await fetch('https://opentdb.com/api_token.php?command=request')\n      .then((response) => response.json());\n    localStorage.setItem('token', fetchToken.token);\n    // alterar Email do State Global\n    const { changeEmail } = this.props;\n    const { email, name } = this.state;\n    changeEmail(email, name);\n    // alterar a url da aplicação\n    history.push('/game');\n  }\n\n  render() {\n    const { name, email, buttonDisabled, redirectConfig } = this.state;\n    return (\n      <div className=\"Login\">\n        <div className=\"riddleImg2\">\n          <img className=\" wobble-hor-bottom\" src=\"https://i.pinimg.com/originals/5e/da/84/5eda849200c4e02d288d91ea2564d944.png\" alt=\"riddler\" />\n        </div>\n        <div className=\"login-main\">\n          <div>\n            {/* <h1 className=\"triviaLogo\"> TRIVIA </h1> */}\n            <img className=\"triviaLogo\" src=\"https://upload.wikimedia.org/wikipedia/en/thumb/2/27/Trivia.png/799px-Trivia.png?20100329210344\" alt=\"test\" />\n          </div>\n          { redirectConfig ? <Settings /> : '' }\n          <label htmlFor=\"input-player-name\">\n            NAME:\n            <input\n              type=\"text\"\n              id=\"input-player-name\"\n              data-testid=\"input-player-name\"\n              value={ name }\n              name=\"name\"\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <label htmlFor=\"input-gravatar-email\">\n            EMAIL:\n            <input\n              type=\"email\"\n              id=\"input-gravatar-email\"\n              data-testid=\"input-gravatar-email\"\n              value={ email }\n              name=\"email\"\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <button\n            type=\"submit\"\n            data-testid=\"btn-play\"\n            onClick={ this.submitClick }\n            disabled={ buttonDisabled }\n          >\n            Play\n          </button>\n\n          <button\n            type=\"button\"\n            data-testid=\"btn-settings\"\n            onClick={ () => this.setState({ redirectConfig: true }) }\n          >\n            Configurações\n          </button>\n        </div>\n        <div className=\"riddleImg\">\n          <img className=\" wobble-hor-bottom\" src=\"https://i.pinimg.com/originals/5e/da/84/5eda849200c4e02d288d91ea2564d944.png\" alt=\"riddler\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeEmail: (email, name) => dispatch(actionSetEmail(email, name)),\n  clearScoreDispatch: () => dispatch(clearScore()),\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  changeEmail: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export const GET_GRAVATAR = 'GET_GRAVATAR';\nexport const SET_EMAIL = 'SET_EMAIL';\n\nexport const actionGetGravatar = (hash) => ({\n  type: GET_GRAVATAR,\n  payload: `https://www.gravatar.com/avatar/${hash}`,\n});\n\nexport const actionSetEmail = (email, name) => ({\n  type: SET_EMAIL,\n  name,\n  email,\n});\n","export const QUESTIONS_API = 'QUESTIONS_API';\nexport const GET_QUESTIONS = 'GET_QUESTIONS';\nexport const GET_QUESTIONS_ERROR = 'GET_QUESTIONS_ERROR';\nexport const RECEIVE_NEW_SCORE = 'RECEIVE_NEW_SCORE';\nexport const CLEAR_SCORE = 'CLEAR_SCORE';\n\nconst questionsAPI = () => ({ type: QUESTIONS_API });\n\nconst getQuestions = (json) => ({\n  type: GET_QUESTIONS,\n  questions: json.results,\n  responseCode: json.response_code,\n});\n\nexport const requestQuestions = (URL) => async (dispatch) => {\n  dispatch(questionsAPI());\n  const fetchURL = await fetch(URL);\n  const jsonURL = await fetchURL.json();\n  // console.log(jsonURL);\n  dispatch(getQuestions(jsonURL));\n};\n\n// Action para atualizar a score quando acertar a resposta\nexport const receiveScore = (newScore) => ({\n  type: RECEIVE_NEW_SCORE,\n  payload: newScore,\n});\n\nexport const clearScore = () => ({\n  type: CLEAR_SCORE,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../CSS/questions.css';\n\nclass Questions extends React.Component {\n  render() {\n    const { indexQuestion } = this.props;\n    const difficultyPoints = {\n      easy: 1,\n      medium: 2,\n      hard: 3,\n    };\n    const { questions, responseCode } = this.props;\n    const { showBorder, changeShowBorder } = this.props;\n\n    const invalidCode = 3;\n    if (questions === undefined || responseCode === invalidCode) return '';\n    const currentQuestion = questions[indexQuestion];\n    const {\n      category,\n      question,\n    } = currentQuestion;\n    const correctAnswer = currentQuestion.correct_answer;\n    const incorrectAnswers = currentQuestion.incorrect_answers;\n    const { difficulty } = currentQuestion;\n\n    const correctAnswerElement = (\n      <button\n        type=\"button\"\n        data-testid=\"correct-answer\"\n        id=\"correct-answer\"\n        name={ difficultyPoints[difficulty] }\n        onClick={ changeShowBorder }\n        className={ showBorder ? 'correct' : '' }\n        disabled={ showBorder }\n      >\n        { correctAnswer }\n      </button>\n    );\n    const incorrectAnswersElement = incorrectAnswers\n      .map((answer, index) => (\n        <button\n          key={ index }\n          type=\"button\"\n          data-testid={ `wrong-answer-${index}` }\n          id={ `wrong-answer-${index}` }\n          name={ difficultyPoints[difficulty] }\n          onClick={ changeShowBorder }\n          className={ showBorder ? 'wrong' : '' }\n          disabled={ showBorder }\n        >\n          { answer }\n        </button>\n      ));\n    const categoryElement = (<h3 data-testid=\"question-category\">{ category }</h3>);\n    const textElement = (<h3 data-testid=\"question-text\">{ question }</h3>);\n\n    const randomNumber = 0.5;\n    const answers = [...incorrectAnswersElement, correctAnswerElement];\n    const answerRandom = answers.sort(() => Math.random() - randomNumber); // algoritimo conhecido que randomiza array\n    const answerRandomElement = answerRandom.map((answer, index) => (\n      <div\n        key={ index }\n        data-testid=\"answer-options\"\n      >\n        { answer }\n      </div>\n    ));\n\n    return (\n      <div className=\"questions shadow-pop-tr\">\n        { categoryElement }\n        { textElement }\n        { answerRandomElement }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  responseCode: store.gameReducer.responseCode,\n});\n\nQuestions.propTypes = {\n  indexQuestion: PropTypes.number.isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  responseCode: PropTypes.number.isRequired,\n  showBorder: PropTypes.bool.isRequired,\n  changeShowBorder: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Questions);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Timer extends React.Component {\n  componentWillUnmount() {\n    const { changeShowBorder } = this.props;\n    changeShowBorder();\n  }\n\n  render() {\n    const { timer } = this.props;\n    return (\n      <h3 className=\"game-timer heartbeat\">\n        { timer }\n      </h3>\n    );\n  }\n}\n\nTimer.propTypes = {\n  timer: PropTypes.number.isRequired,\n  changeShowBorder: PropTypes.func.isRequired,\n};\n\nexport default Timer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport { actionGetGravatar } from '../redux/actions/headerActions';\nimport '../CSS/header.css';\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const { getGravatar, email } = this.props;\n    getGravatar(email);\n  }\n\n  render() {\n    const { score, name, gravatarEndPoint } = this.props;\n    return (\n      <header className=\"header\">\n        <div>\n          <h2 className=\"header-player-name\" data-testid=\"header-player-name\">\n            { name }\n          </h2>\n          <img\n            src={ gravatarEndPoint }\n            alt=\"gravatar\"\n            data-testid=\"header-profile-picture\"\n          />\n        </div>\n        <div>\n          <h2 className=\"header-score\" data-testid=\"header-score\">\n            Pontuação:\n            {' '}\n            { score }\n          </h2>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  email: store.player.email,\n  score: store.player.score,\n  name: store.player.name,\n  gravatarEndPoint: store.player.gravatarEndPoint,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getGravatar: (email) => dispatch(actionGetGravatar(md5(email))),\n});\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  getGravatar: PropTypes.func.isRequired,\n  gravatarEndPoint: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass NextButton extends React.Component {\n  render() {\n    const { changeIndex, indexQuestion } = this.props;\n    const lastQuestionIndex = 4;\n    return (indexQuestion === lastQuestionIndex) ? (\n      <Link to=\"/feedback\">\n        <button\n          type=\"button\"\n          className=\"game-next-button\"\n          onClick={ changeIndex }\n          data-testid=\"btn-next\"\n        >\n          Próxima\n        </button>\n      </Link>\n    ) : (\n      <button\n        type=\"button\"\n        className=\"game-next-button\"\n        onClick={ changeIndex }\n        data-testid=\"btn-next\"\n      >\n        Next\n      </button>\n    );\n  }\n}\n\nNextButton.propTypes = {\n  changeIndex: PropTypes.func.isRequired,\n  indexQuestion: PropTypes.number.isRequired,\n};\n\nexport default NextButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Questions from '../components/Questions';\nimport Timer from '../components/Timer';\nimport { receiveScore, requestQuestions } from '../redux/actions/gameActions';\nimport Header from '../components/Header';\nimport NextButton from '../components/NextButton';\nimport '../CSS/game.css';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 30,\n      disabled: false,\n      showBorder: false,\n      index: 0,\n    };\n  }\n\n  componentDidMount() {\n    // console.log('oi');\n    this.counterTimer();\n    this.receiveAPI();\n  }\n\n  receiveAPI = () => {\n    const { requestQuestionsDispatch } = this.props;\n    const token = localStorage.getItem('token');\n    const URL = `https://opentdb.com/api.php?amount=5&token=${token}`;\n    // console.log(token);\n    requestQuestionsDispatch(URL);\n  }\n\n  counterTimer = () => {\n    const oneSecond = 1000;\n    setInterval(() => {\n      this.setState((prevState) => ({\n        timer: prevState.timer - 1,\n      }));\n    }, oneSecond);\n  }\n\n  correctAnswer = (difficulty) => {\n    const { timer } = this.state;\n    const { receiveNewScore } = this.props;\n    const ten = 10;\n    const points = ten + (timer * Math.floor(difficulty));\n    receiveNewScore(points);\n  }\n\n  changeShowBorder = ({ target }) => {\n    this.setState({\n      showBorder: true,\n    });\n    const { name, id } = target;\n    if (id === 'correct-answer') {\n      // console.log('resposta-correta');\n      this.correctAnswer(name);\n    }\n  }\n\n  changeShowBorderPerTime = () => {\n    this.setState({\n      showBorder: true,\n    });\n  }\n\n  changeIndex = () => {\n    const maxIndex = 4;\n    this.setState((prevState) => ({\n      showBorder: false,\n      timer: 30,\n      index: (prevState.index < maxIndex) ? prevState.index + 1 : 0,\n    }));\n  }\n\n  render() {\n    // console.log('render');\n    const { responseCode, questions } = this.props;\n    const { timer, disabled, showBorder, index } = this.state;\n\n    // console.log('reponseCode', responseCode);\n    // console.log('questions', questions);\n\n    if (questions === undefined) return '';\n    const invalidTokenCode = 3;\n    const questionsComponent = (\n      <Questions\n        indexQuestion={ index }\n        showBorder={ showBorder }\n        changeShowBorder={ this.changeShowBorder }\n        questions={ questions }\n        disabled={ disabled }\n      />\n    );\n    return (\n      <div className=\"Game\">\n        <Header />\n        {\n          // cria o componente timer e desmonta quando o tempo acabar\n          (timer > 0 && showBorder === false)\n            ? <Timer changeShowBorder={ this.changeShowBorderPerTime } timer={ timer } />\n            : ''\n        }\n        { responseCode === invalidTokenCode ? <Redirect to=\"/\" /> : '' }\n        { questionsComponent }\n        {\n          (showBorder)\n            ? <NextButton changeIndex={ this.changeIndex } indexQuestion={ index } />\n            : ''\n        }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestQuestionsDispatch: (URL) => dispatch(requestQuestions(URL)),\n  receiveNewScore: (score) => dispatch(receiveScore(score)),\n});\n\nconst mapStateToProps = (store) => ({\n  responseCode: store.gameReducer.responseCode,\n  questions: store.gameReducer.questions,\n});\n\nGame.propTypes = {\n  requestQuestionsDispatch: PropTypes.func.isRequired,\n  receiveNewScore: PropTypes.func.isRequired,\n  responseCode: PropTypes.number.isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { clearScore } from '../redux/actions/gameActions';\nimport '../CSS/feedback.css';\n\nclass FeedBack extends React.Component {\n  getScoreInfo = () => {\n    const initialRanking = [];\n    const { score, name, email, gravatarEndPoint } = this.props;\n    const rankingInfo = JSON.parse(localStorage.getItem('ranking')) || initialRanking;\n    localStorage.setItem('ranking', JSON.stringify([...rankingInfo, {\n      gravatarEndPoint,\n      email,\n      name,\n      score,\n    }]));\n  }\n\n  clearScore = () => {\n    const { clearScoreDispatch } = this.props;\n    clearScoreDispatch();\n  }\n\n  render() {\n    this.getScoreInfo();\n    const three = 3;\n    const { assertions, score } = this.props;\n    return (\n      <div className=\"feedback-container\">\n        <div className=\"feedback-header\">\n          <Header />\n        </div>\n\n        <div className=\"feedback-body\">\n          <h3 data-testid=\"feedback-text\" className=\"feedback-message\">\n            { (assertions < three) ? 'Could be better...' : 'Well Done!' }\n          </h3>\n          <div className=\"feedback-result\">\n            <div className=\"score-container\">\n              <h3>Score:</h3>\n              &nbsp;\n              <h3\n                data-testid=\"feedback-total-score\"\n                className=\"feedback-score\"\n              >\n                { score }\n              </h3>\n            </div>\n            <div className=\"assertions-container\">\n              <h3>Assertions:</h3>\n              &nbsp;\n              <h3 data-testid=\"feedback-total-question\" className=\"total\">\n                { assertions}\n              </h3>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            <Link to=\"/\">\n              <button\n                type=\"button\"\n                onClick={ this.clearScore }\n                data-testid=\"btn-play-again\"\n                className=\"btn\"\n              >\n                Play Again\n              </button>\n            </Link>\n            <Link to=\"/ranking\">\n              <button\n                type=\"button\"\n                data-testid=\"btn-ranking\"\n                className=\"btn\"\n              >\n                Ranking\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  assertions: store.player.assertions,\n  score: store.player.score,\n  email: store.player.email,\n  name: store.player.name,\n  gravatarEndPoint: store.player.gravatarEndPoint,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearScoreDispatch: () => dispatch(clearScore()),\n});\n\nFeedBack.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  clearScoreDispatch: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  gravatarEndPoint: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedBack);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../CSS/ranking.css';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirectHome: false,\n    };\n  }\n\n  render() {\n    const { redirectHome } = this.state;\n    const homeButton = (\n      <button\n        data-testid=\"btn-go-home\"\n        onClick={ () => this.setState({ redirectHome: true }) }\n        type=\"button\"\n        className=\"btn-go-home\"\n      >\n        Home\n      </button>\n    );\n\n    const rankingInfo = JSON.parse(localStorage.getItem('ranking')) || [];\n    // console.log(rankingInfo);\n    const rankingInfoOrdered = rankingInfo.sort((a, b) => b.score - a.score);\n    // console.log(rankingInfoOrdered);\n    const rankingList = (\n      <ul className=\"list-container-ul\">\n        { rankingInfoOrdered.map((player, index) => (\n          <div key={ index } className=\"list-container\">\n            <div className=\"score-name\">\n              <li\n                data-testid={ `player-name-${index}` }\n                className=\"list-item name\"\n              >\n                { player.name }\n              </li>\n              <li\n                data-testid={ `player-score-${index}` }\n                className=\"list-item score\"\n              >\n                { player.score }\n              </li>\n            </div>\n            <img\n              alt=\"\"\n              src={ player.gravatarEndPoint }\n              className=\"list-item gravatar\"\n            />\n          </div>\n        ))}\n      </ul>\n    );\n    return (\n      <div className=\"ranking-container\">\n        <h3\n          data-testid=\"ranking-title\"\n          className=\"ranking-title\"\n        >\n          Ranking\n        </h3>\n        { redirectHome ? <Redirect to=\"/\" /> : '' }\n        <div className=\"ranking-main\">\n          { rankingList }\n          { homeButton }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => ({\n  email: store.player.email,\n  score: store.player.score,\n  name: store.player.name,\n  gravatarEndPoint: store.player.gravatarEndPoint,\n});\n\nexport default connect(mapStateToProps, null)(Ranking);\n","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n// import logo from './trivia.png';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/ranking\" component={ Ranking } />\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/game\" render={ (props) => <Game { ...props } /> } />\n      <Route exact path=\"/feedback\" component={ Feedback } />\n      <Route exact path=\"/settings\" component={ Settings } />\n    </Switch>\n  );\n}\n","import { GET_QUESTIONS } from '../actions/gameActions';\n\nconst INITIAL_STATE = {\n\n};\n\nconst gameReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_QUESTIONS:\n    return {\n      ...state,\n      questions: action.questions,\n      responseCode: action.responseCode,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default gameReducer;\n","import { CLEAR_SCORE, RECEIVE_NEW_SCORE } from '../actions/gameActions';\nimport { GET_GRAVATAR, SET_EMAIL } from '../actions/headerActions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  email: '',\n  gravatarEndPoint: '',\n  score: 0,\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_GRAVATAR:\n    return {\n      ...state,\n      gravatarEndPoint: action.payload,\n    };\n  case SET_EMAIL:\n    return {\n      ...state,\n      name: action.name,\n      email: action.email,\n    };\n  case RECEIVE_NEW_SCORE:\n    return {\n      ...state,\n      name: state.name,\n      gravatarEmail: state.gravatarEmail,\n      score: state.score + action.payload,\n      assertions: state.assertions + 1,\n    };\n  case CLEAR_SCORE:\n    return {\n      ...state,\n      name: '',\n      email: '',\n      assertions: 0,\n      gravatarEndPoint: '',\n      score: 0,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import { combineReducers } from 'redux';\nimport gameReducer from './gameReducer';\nimport player from './player';\n\nconst rootReducer = combineReducers({\n  player,\n  gameReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, legacy_createStore as createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}